package com.example.greenplant.component.home

import android.Manifest
import android.annotation.SuppressLint
import android.app.Activity
import android.content.Intent
import android.graphics.Bitmap
import android.graphics.BitmapFactory
import android.graphics.Matrix
import android.media.ExifInterface
import android.net.Uri
import android.os.Build
import android.os.Bundle
import android.provider.MediaStore
import android.util.Log
import androidx.core.content.FileProvider
import androidx.lifecycle.Observer
import androidx.lifecycle.ViewModelProvider
import com.example.greenplant.GreenPlantApplication.Companion.context
import com.example.greenplant.activity.BaseViewModelActivity
import com.example.greenplant.databinding.ActivityPlantRecognitionBinding
import com.example.greenplant.util.Base64Util
import com.example.greenplant.util.FileUtil
import com.example.greenplant.util.SuperUiUtil
import com.example.greenplant.viewModel.BaiduRecognitionViewModel
import com.permissionx.guolindev.PermissionX
import com.qmuiteam.qmui.util.QMUIStatusBarHelper
import java.io.File
import java.io.FileOutputStream


class PlantRecognitionActivity : BaseViewModelActivity<ActivityPlantRecognitionBinding>() {
    private val takePhoto = 1
    private lateinit var imageUri:Uri
    private lateinit var outputImage:File
    private val baiduRecognitionViewModel by lazy {
        ViewModelProvider(this)[BaiduRecognitionViewModel::class.java]
    }

    @SuppressLint("StringFormatInvalid")
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        outputImage = File(externalCacheDir, "output_image.jpg")
        if (outputImage.exists()) {
            outputImage.delete()
        }
        outputImage.createNewFile()
        imageUri =
            FileProvider.getUriForFile(this, "com.example.greenplant.fileprovider", outputImage)

        requestPermission()

        baiduRecognitionViewModel.baiduPlantRecognitionResponse.observe(this, Observer {
            val baiduPlantRecognitionResponse = it.getOrNull()
            if (baiduPlantRecognitionResponse != null){
                val result = baiduPlantRecognitionResponse[0]
                binding.plantName.text = result.name
                binding.truth.text = "可信度: ${result.score * 100} %"
            }
        })
    }

    override fun initViews() {
        super.initViews()
        QMUIStatusBarHelper.translucent(this)
//        baiduRecognitionViewModel.setBase64Image("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")



    }

    override fun initListener() {
        super.initListener()
        binding.back.setOnClickListener {
            finish()
        }
    }


    private fun requestPermission(){
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU){
            PermissionX.init(this).permissions(
                Manifest.permission.CAMERA,
                Manifest.permission.READ_PHONE_STATE,
//                 手机存储权限在不同版本
                Manifest.permission.READ_MEDIA_AUDIO,
                Manifest.permission.READ_MEDIA_IMAGES,
            )
        }else{
            PermissionX.init(this).permissions(
                Manifest.permission.CAMERA,
                Manifest.permission.READ_PHONE_STATE,
                Manifest.permission.READ_EXTERNAL_STORAGE,
                Manifest.permission.WRITE_EXTERNAL_STORAGE
            )
        }.request { allGranted, _, _ ->
            if (allGranted){
                launchCamera()
            }else{
                SuperUiUtil.newToast(this, "该功能只能授权权限后方可使用")
                finish()
            }
        }
    }



    // 启动相机 Intent
    private fun launchCamera() {
        val intent = Intent("android.media.action.IMAGE_CAPTURE")
        intent.putExtra(MediaStore.EXTRA_OUTPUT, imageUri)
        startActivityForResult(intent, takePhoto)
    }

    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
        super.onActivityResult(requestCode, resultCode, data)
        when (requestCode) {
            takePhoto -> {
                if (resultCode == Activity.RESULT_OK) {
                    // 将拍摄的照片显示出来
                    val bitmap = BitmapFactory.decodeStream(contentResolver.
                    openInputStream(imageUri))
                    val rotateBitmap = rotateIfRequired(bitmap)
                    binding.takenPhoto.setImageBitmap(rotateBitmap)

                    val directory = context.filesDir
                    // 创建文件名
                    val fileName = "my_image.jpg"
                    // 创建完整的文件路径
                    val filePath = File(directory, fileName).absolutePath
                    Log.d("TAG", "$filePath")
                    // 创建一个文件输出流来写入文件
                    val fos: FileOutputStream? = try {
                        FileOutputStream(filePath)
                    } catch (e: Exception) {
                        e.printStackTrace()
                        null
                    }

                    // 如果文件输出流创建成功，则将Bitmap保存为JPG文件
                    if (fos != null) {
                        try {
                            // 压缩Bitmap为JPG格式并写入文件，这里使用了90的压缩质量
                            rotateBitmap.compress(Bitmap.CompressFormat.JPEG, 90, fos)
                            fos.flush()
                            fos.close()
                            // 文件保存成功
                        } catch (e: Exception) {
                            e.printStackTrace()
                            // 处理文件保存失败的情况
                        }
                    } else {
                        // 处理文件输出流创建失败的情况
                    }


                    val imgData = FileUtil.readFileByBytes(filePath)
                    val imgStr = Base64Util.encode(imgData)
//                    baiduRecognitionViewModel.setBase64Image(imgStr)
                    Log.d("TAG", "$imgStr")
                }
            }
        }
    }
    private fun rotateIfRequired(bitmap: Bitmap): Bitmap {
        val exif = ExifInterface(outputImage.path)
        val orientation = exif.getAttributeInt(ExifInterface.TAG_ORIENTATION,
            ExifInterface.ORIENTATION_NORMAL)
        return when (orientation) {
            ExifInterface.ORIENTATION_ROTATE_90 -> rotateBitmap(bitmap, 90)
            ExifInterface.ORIENTATION_ROTATE_180 -> rotateBitmap(bitmap, 180)
            ExifInterface.ORIENTATION_ROTATE_270 -> rotateBitmap(bitmap, 270)
            else -> bitmap
        }
    }
    private fun rotateBitmap(bitmap: Bitmap, degree: Int): Bitmap {
        val matrix = Matrix()
        matrix.postRotate(degree.toFloat())
        val rotatedBitmap = Bitmap.createBitmap(bitmap, 0, 0, bitmap.width, bitmap.height,
            matrix, true)
        bitmap.recycle() // 将不再需要的Bitmap对象回收
        return rotatedBitmap
    }

}